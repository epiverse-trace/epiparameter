% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_prob_dist.R
\name{create_prob_dist}
\alias{create_prob_dist}
\title{Create a distribution object from distribution name and parameters}
\usage{
create_prob_dist(prob_dist, prob_dist_params, discretise, truncation)
}
\arguments{
\item{prob_dist}{A character string specifying the probability
distribution. This should match the R naming convention of probability
distributions (e.g. lognormal is lnorm, negative binomial is nbinom, and
geometric is geom).}

\item{prob_dist_params}{A named vector of probability distribution
parameters.}

\item{discretise}{A boolean \code{logical} whether the distribution is
discretised.
Default is FALSE which assumes a continuous probability distribution}

\item{truncation}{A \code{numeric} specifying the truncation point if the inferred
distribution was truncated, \code{NA} if not or unknown.}
}
\value{
An S3 class containing the probability distribution.
}
\description{
Creates an S3 class holding the distribution and parameters
from the probability distribution name, its parameters and distribution
truncation and discretisation.

The class holding the distribution depends on whether it is a discretised
distribution. For continuous and discrete distributions S3 classes from the
\code{{distributional}} package are used, for discretised continuous
distributions the an S3 class from the \code{{distcrete}} package is used.

For details on the properties of the distribution classes
from each respective package see their documentation (either
\code{?distributional} or \code{?distcrete})
}
\details{
Truncation is enabled only for continuous distributions as there
is no truncation implemented in \code{{distcrete}}.
}
\examples{
\donttest{
# example with continuous distribution without truncation
epiparameter:::create_prob_dist(
  prob_dist = "gamma",
  prob_dist_params = c(shape = 1, scale = 1),
  discretise = FALSE,
  truncation = NA
)

# example with continuous distribution with truncation
epiparameter:::create_prob_dist(
  prob_dist = "gamma",
  prob_dist_params = c(shape = 1, scale = 1),
  discretise = FALSE,
  truncation = 10
)

# example with discrete distribution
epiparameter:::create_prob_dist(
  prob_dist = "gamma",
  prob_dist_params = c(shape = 1, scale = 1),
  discretise = TRUE,
  truncation = NA
)
}
}
\keyword{internal}
