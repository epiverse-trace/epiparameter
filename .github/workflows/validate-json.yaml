name: Validate JSONs

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  validate-json:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Install V8
        run: sudo apt install libv8-dev

      - name: Install jsonvalidate
        run: |
          Rscript -e 'install.packages("jsonvalidate")'

      - name: Data to JSON
        run: |
          # read in epiparameter database
          data <- utils::read.csv(
            file = system.file(
              file.path("extdata", "parameters.csv"),
              package = "epiparameter",
              mustWork = TRUE
            ), header = TRUE
          )

          # convert cells with arrays to numeric
          for (i in grep(pattern = "_ci_limits$", x = colnames(data))) {
            if (!all(is.na(data[[i]]))) {
              data[[i]] <- lapply(
                strsplit(x = data[[i]], split = ",", fixed = TRUE),
                as.numeric
              )
            }
          }

          data_json <- jsonlite::toJSON(
            x = data,
            dataframe = "columns",
            na = NULL,
            pretty = TRUE
          )
        shell: Rscript {0}

      - name: Schema to JSON
        run: |
          # read schema
          schema <- yaml::read_yaml(
            system.file(
              file.path("extdata", "data_dictionary.yaml"),
              package = "epiparameter",
              mustWork = TRUE
            )
          )

          schema_json <- jsonlite::toJSON(
            x = schema,
            dataframe = "column",
            auto_unbox = TRUE,
            pretty = TRUE
          )
        shell: Rscript {0}


      - name: Validate packages.json
        run: |
          jsonvalidate::json_validate(
            json = data_json,
            schema = schema_json,
            engine = "ajv",
            verbose = TRUE,
            greedy = TRUE,
            strict = TRUE,
            error = TRUE
          )
        shell: Rscript {0}